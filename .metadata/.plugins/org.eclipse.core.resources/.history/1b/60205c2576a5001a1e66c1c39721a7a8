package kr.irolab.will.service;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.extern.slf4j.Slf4j;

@ExtendWith(SpringExtension.class)
@SpringBootTest
@AutoConfigureMockMvc
@Slf4j
class WillPbcWillControllerTest {
	@Autowired
	MockMvc mvc;

	@Autowired
	private WillOpenWillService service;

	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}

	@Test
	void test() throws Exception {
		WillServiceResPayLoad list = new WillServiceResPayLoad();
		WillOpenWillPayLoad payload = new WillOpenWillPayLoad();

		payload.setWillNo(2);
		payload.setWillTitle("안녕하세요");
		payload.setWillText("내용입니다.");
		payload.setWillCreateDt("2020-02-11");

		list.setCode(200);
		list.setMessage("Success");
		list.getData().add(payload);

		ObjectMapper mapper = new ObjectMapper();
		String json = mapper.writeValueAsString(payload);
		System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(list));
		log.info("json {}", json);

////		mvc.perform(MockMvcRequestBuilders.get("/api/service/public-will")) //
////				.andDo(MockMvcResultHandlers.print()) //
////				.andExpect(MockMvcResultMatchers.status().isOk());
//
//		MvcResult result = mvc
//				.perform(MockMvcRequestBuilders.get("/api/service/public-will").accept(MediaType.APPLICATION_JSON))
//				.andExpect(MockMvcResultMatchers.status().isOk()) //
//				.andDo(MockMvcResultHandlers.print()) //
//				.andReturn();
//		log.info("{}", result);
	}

	@Test
	void test2() throws Exception {
		System.out.println("WillOpenWillControllerTest.test2()");
		MvcResult result = mvc.perform(MockMvcRequestBuilders.get("/api/service/public-will"))
				.andExpect(MockMvcResultMatchers.status().isOk()) //
				.andDo(MockMvcResultHandlers.print()) //
				.andReturn();
		log.info("{}", result);
	}

}
