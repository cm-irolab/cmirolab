package kr.irolab.will.userno;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MockMvcBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import lombok.extern.slf4j.Slf4j;

@WebMvcTest
@Slf4j
class WillMemberControllerTest {

	@Autowired
	MockMvc mvc;

	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}

//	public void before() {
//		mvc = MockMvcBuilders.standaloneSetup(WillMemberController.class)
//				.alwaysExpect(MockMvcResultMatchers.status().isOk()).build();
//	}

	@Test
	void memberTest() throws Exception {
		mvc.perform(MockMvcRequestBuilders.get("{user_no}").accept(MediaType.TEXT_HTML))
				.andExpect(MockMvcResultMatchers.status().isOk())
				.andExpect(MockMvcResultMatchers.model().attribute("NAME", "MIN")).andDo(MockMvcResultHandlers.print());
	}

}
